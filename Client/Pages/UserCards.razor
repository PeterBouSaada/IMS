@inject HttpClient Http
@inject Blazored.LocalStorage.LocalStorageService localStorage
@using Classes
@using Models
@using System.Net
@using Newtonsoft.Json;

@foreach (User user in users)
{
    <div class="card">
        <div class="user-info">
            <div class="username">
                @user.username
            </div>
        </div>
        <div class="action-list">
            <button class="edit-button">Edit</button>
            <button class="delete-button">Delete</button>
        </div>
    </div>
}
@code{
    public List<User> users = new List<User>();

    protected async override Task OnInitializedAsync()
    {
        User user = new User();
        await GetAllUsers(user);
    }

    public async Task GetAllUsers(User user)
    {
        HttpRequestService<User> requestService = new HttpRequestService<User>(Http, localStorage);
        if (user.username == "" || user.username == null)
        {
            HttpResponseMessage request = await Task.Run(() => (requestService.GetRequest(user, "https://localhost:5001/API/user/getAll")));
            if (request.StatusCode == HttpStatusCode.OK)
            {
                users = JsonConvert.DeserializeObject<List<User>>(await request.Content.ReadAsStringAsync());
                StateHasChanged();
            }
        }
        else
        {
            HttpResponseMessage request = await Task.Run(() => (requestService.PostRequest(user, "https://localhost:5001/API/user/search")));
            if (request.StatusCode == HttpStatusCode.OK)
            {
                users = JsonConvert.DeserializeObject<List<User>>(await request.Content.ReadAsStringAsync());
                StateHasChanged();
            }
        }

    }
}
